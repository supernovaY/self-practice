import path from 'path';
import mkdirp from 'mkdirp';
import fs from 'fs';
import crypto from 'crypto';

var packageJson = require('../../package.json');

export function writeFile(filepath, contents) {
  return new Promise(function (resolve, reject) {
    mkdirp(path.dirname(filepath), function (err) {
      if (err) return reject("filepath: " + filepath + ", " + err);
      fs.writeFile(filepath, contents, function (err) {
        if (err) return reject("filepath: " + filepath + ", " + err);
        resolve({});
      });
    });
  });
}
export function moveFile(from, to) {
  return new Promise(function (resolve, reject) {
    mkdirp(path.dirname(to), function (err) {
      if (err) return reject("\u8BFB\u53D6\u6587\u4EF6\u5931\u8D25: " + from + ", " + err);
      var contents = fs.readFileSync(from);
      fs.writeFile(to, contents, function (err) {
        if (err) return reject("\u5199\u5165\u6587\u4EF6\u5931\u8D25: " + to + ", " + err);
        resolve({});
      });
    });
  });
}
/**
 * 命令是否在根目录执行
 */

export function isInRoot() {
  var cwd = process.cwd();
  var flag = fs.existsSync(path.resolve(cwd, 'package.json'));
  return flag;
}
/** 获取文件md5 */

export function getMd5(fileContent) {
  var hash = crypto.createHash('md5');
  hash.update(fileContent);
  return hash.digest('hex');
}
/** 获取当前包名 */

export function getPackageName() {
  return packageJson.name;
}