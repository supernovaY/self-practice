"use strict";

exports.__esModule = true;
exports.writeFile = writeFile;
exports.moveFile = moveFile;
exports.isInRoot = isInRoot;
exports.getMd5 = getMd5;
exports.getPackageName = getPackageName;

var _path = _interopRequireDefault(require("path"));

var _mkdirp = _interopRequireDefault(require("mkdirp"));

var _fs = _interopRequireDefault(require("fs"));

var _crypto = _interopRequireDefault(require("crypto"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var packageJson = require('../../package.json');

function writeFile(filepath, contents) {
  return new Promise(function (resolve, reject) {
    (0, _mkdirp.default)(_path.default.dirname(filepath), function (err) {
      if (err) return reject("filepath: " + filepath + ", " + err);

      _fs.default.writeFile(filepath, contents, function (err) {
        if (err) return reject("filepath: " + filepath + ", " + err);
        resolve({});
      });
    });
  });
}

function moveFile(from, to) {
  return new Promise(function (resolve, reject) {
    (0, _mkdirp.default)(_path.default.dirname(to), function (err) {
      if (err) return reject("\u8BFB\u53D6\u6587\u4EF6\u5931\u8D25: " + from + ", " + err);

      var contents = _fs.default.readFileSync(from);

      _fs.default.writeFile(to, contents, function (err) {
        if (err) return reject("\u5199\u5165\u6587\u4EF6\u5931\u8D25: " + to + ", " + err);
        resolve({});
      });
    });
  });
}
/**
 * 命令是否在根目录执行
 */


function isInRoot() {
  var cwd = process.cwd();

  var flag = _fs.default.existsSync(_path.default.resolve(cwd, 'package.json'));

  return flag;
}
/** 获取文件md5 */


function getMd5(fileContent) {
  var hash = _crypto.default.createHash('md5');

  hash.update(fileContent);
  return hash.digest('hex');
}
/** 获取当前包名 */


function getPackageName() {
  return packageJson.name;
}